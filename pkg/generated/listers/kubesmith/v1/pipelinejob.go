/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kubesmith/kubesmith/pkg/apis/kubesmith/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PipelineJobLister helps list PipelineJobs.
type PipelineJobLister interface {
	// List lists all PipelineJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.PipelineJob, err error)
	// PipelineJobs returns an object that can list and get PipelineJobs.
	PipelineJobs(namespace string) PipelineJobNamespaceLister
	PipelineJobListerExpansion
}

// pipelineJobLister implements the PipelineJobLister interface.
type pipelineJobLister struct {
	indexer cache.Indexer
}

// NewPipelineJobLister returns a new PipelineJobLister.
func NewPipelineJobLister(indexer cache.Indexer) PipelineJobLister {
	return &pipelineJobLister{indexer: indexer}
}

// List lists all PipelineJobs in the indexer.
func (s *pipelineJobLister) List(selector labels.Selector) (ret []*v1.PipelineJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PipelineJob))
	})
	return ret, err
}

// PipelineJobs returns an object that can list and get PipelineJobs.
func (s *pipelineJobLister) PipelineJobs(namespace string) PipelineJobNamespaceLister {
	return pipelineJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PipelineJobNamespaceLister helps list and get PipelineJobs.
type PipelineJobNamespaceLister interface {
	// List lists all PipelineJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.PipelineJob, err error)
	// Get retrieves the PipelineJob from the indexer for a given namespace and name.
	Get(name string) (*v1.PipelineJob, error)
	PipelineJobNamespaceListerExpansion
}

// pipelineJobNamespaceLister implements the PipelineJobNamespaceLister
// interface.
type pipelineJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PipelineJobs in the indexer for a given namespace.
func (s pipelineJobNamespaceLister) List(selector labels.Selector) (ret []*v1.PipelineJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PipelineJob))
	})
	return ret, err
}

// Get retrieves the PipelineJob from the indexer for a given namespace and name.
func (s pipelineJobNamespaceLister) Get(name string) (*v1.PipelineJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("pipelinejob"), name)
	}
	return obj.(*v1.PipelineJob), nil
}
